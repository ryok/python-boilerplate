---
description: AI知見管理システムとプロジェクトドキュメント
globs:
  - "**/.claude/**"
  - "**/.clinerules/**"
  - "**/CLAUDE.md"
  - "**/README.md"
alwaysApply: false
---

# 知見管理システム

## Claude AI 統合

プロジェクトは`.claude/`ディレクトリに構造化された知見管理システムを使用しています。

### ファイル構造と役割

#### `.claude/context.md`
- プロジェクトの背景と目的
- 技術スタック選定の理由
- ビジネス要件と技術的制約
- ドメイン固有の知識

#### `.claude/project-knowledge.md`
- 実装パターンと設計決定
- アーキテクチャの選択と理由
- 避けるべきアンチパターン
- ベストプラクティス集

#### `.claude/project-improvements.md`
- 過去の試行錯誤の記録
- 失敗した実装とその原因
- 改善プロセスと結果
- 学んだ教訓

#### `.claude/common-patterns.md`
- 頻繁に使用するコマンドパターン
- 標準的な実装テンプレート
- 再利用可能なコードスニペット

### 更新ルール

1. **新しい実装時**
   - 設計決定を`project-knowledge.md`に記録
   - 使用したパターンを`common-patterns.md`に追加

2. **問題解決時**
   - 試行錯誤を`project-improvements.md`に記録
   - 解決策と理由を明記

3. **要件変更時**
   - `context.md`を更新
   - 影響を受ける他のドキュメントも更新

## Cline ルール管理

`.clinerules/`ディレクトリでプロジェクト固有のルールを管理：

- `project-overview.md` - プロジェクト概要
- `tech-stack.md` - 技術スタックとツール
- `development-guidelines.md` - 開発ガイドライン
- `common-commands.md` - コマンド集
- `project-structure.md` - ディレクトリ構造
- `knowledge-management.md` - 知見管理説明

## ドキュメント作成基準

### 良いドキュメントの例
```markdown
## 認証システムの実装

### 選択した方法
JWT（JSON Web Token）を使用したステートレス認証

### 理由
1. スケーラビリティ：セッション管理が不要
2. マイクロサービス対応：サービス間で共有可能
3. 標準規格：広くサポートされている

### 実装の詳細
- アクセストークン：15分の有効期限
- リフレッシュトークン：7日間の有効期限
- トークンローテーション実装

### 注意点
- トークンのサイズに注意（ペイロードは最小限に）
- HTTPS必須（中間者攻撃対策）
```

### ドキュメント記載時の注意

1. **具体的に記述**
   - 曖昧な表現を避ける
   - 数値や設定値を明記

2. **理由を説明**
   - なぜその選択をしたか
   - 他の選択肢との比較

3. **実例を含める**
   - コードスニペット
   - 設定例
   - コマンド例

4. **更新日を記録**
   - 重要な変更には日付を追加
   - 変更の影響範囲を明記

## メンテナンス指針

- 月次でドキュメントレビュー
- 不要な情報の削除
- 新しい知見の追加
- 矛盾の解消

## 重要性

適切な知見管理により：
- 同じ問題の繰り返しを防ぐ
- 新メンバーのオンボーディング効率化
- プロジェクトの一貫性維持
- AIアシスタントの効果的な活用